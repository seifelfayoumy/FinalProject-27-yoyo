name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]


env:
  DOCKER_USERNAME: seifelfayoumy
  DOCKER_PASSWORD: ACLproject123

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [AdminService, UserService, TransactionService, SearchService, apigateway]

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build ${{ matrix.service }}
      working-directory: ./${{ matrix.service }}
      run: |
        mvn clean package -DskipTests

  docker-build-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: [AdminService, UserService, TransactionService, SearchService, apigateway]
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      working-directory: ./${{ matrix.service }}
      run: mvn clean package -DskipTests

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Convert service name to lowercase
      id: lowercase
      run: |
        echo "SERVICE_LOWERCASE=$(echo ${{ matrix.service }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./${{ matrix.service }}
        push: true
        tags: |
          ${{ env.DOCKER_USERNAME }}/${{ env.SERVICE_LOWERCASE }}:latest
          ${{ env.DOCKER_USERNAME }}/${{ env.SERVICE_LOWERCASE }}:${{ github.sha }}
        cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/${{ env.SERVICE_LOWERCASE }}:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_USERNAME }}/${{ env.SERVICE_LOWERCASE }}:buildcache,mode=max

  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Minikube
      uses: medyagh/setup-minikube@master

    - name: Start Minikube
      run: |
        minikube start
        minikube status

    - name: Deploy to Kubernetes
      run: |
        cd k8s
        # Apply configurations for each service
        for dir in */; do
          if [ -d "$dir" ]; then
            echo "Deploying $dir"
            kubectl apply -f "$dir"
          fi
        done
        
        # Wait for pods to be ready
        kubectl wait --for=condition=ready pod --all --timeout=300s
        
        # Show deployment status
        echo "Deployed Services:"
        kubectl get services
        echo "Deployed Pods:"
        kubectl get pods
        echo "Deployed Deployments:"
        kubectl get deployments 